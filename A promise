#C. - Ovvero un amore
#####################

#Descrizione iniziales di C.
###########################

set_volume! 3.5 #max is 5
use_bpm 60 #il sample Ã¨ di 35 secondi --> attack, sustain, release sono in bpm; 60 bpm = 60 sec
use_debug true

load_samples "C:/Users/Valentino/Desktop/C. - Ovvero un amore/Colonna sonora/Campionamenti"

Giro_accordi = "C:/Users/Valentino/Desktop/C. - Ovvero un amore/Colonna sonora/Campionamenti/Giro accordi guitar BIS - descrizione C.wav"
Gabbiani = "C:/Users/Valentino/Desktop/C. - Ovvero un amore/Colonna sonora/Campionamenti/Seagull Sound Effect - [0, 35 sec].wav"
Armoniche = "C:/Users/Valentino/Desktop/C. - Ovvero un amore/Colonna sonora/Campionamenti/Armoniche guitar - due - descrizione C.wav"
Registrazione_uno = "C:/Users/Valentino/Desktop/C. - Ovvero un amore/Colonna sonora/Campionamenti/Registrazione capitolo 1 - Descrizione donna-festa.wav"


#Commands for activating the second part of the loops
#####################################################

#general controls

first_step = 1 #laternative is 0
second_step = 1 #alternative is 0
third_step = 1 #alternative is 0

set :command_guitar, first_step #alternative is 0 - recall to deactivate the guitar immediately
set :command_guitar_start, second_step #alternative is 0

set :command_ship_bells, first_step #alternative is 0
set :command_ship_not_delayed, second_step #alternative is 0
set :command_ship_stop, third_step #alternative si 0

set :command_piano, first_step #alternative is 0
set :command_piano_not_delayed, second_step #alternative is 0
set :command_piano_stop, third_step #alternative is 0

set :command_wind, first_step #alternative is 0
set :command_wind_not_delayed, second_step #alternative is 0
set :command_wind_stop, third_step #alternative is 0

set :command_armonic, first_step #alternative is 0
set :command_armonic_not_delayed, second_step #alternative is 0
set :command_armonic_stop, third_step #alternative is 0

set :command_record, third_step #alernative is 0; recall this live loop manage also 'gabbiani' and 'oceano' with a set = 0

set :command_gabbiani, 1 #alternative is 0
set :command_oceano, 1 #alternative is 0


#Guitar
#######

live_loop :guitar do
  
  if get(:command_guitar) > 0
    sleep 1
    
  else
    if get(:command_guitar_start) > 0
      with_fx :flanger, mix: 0.2 do
        with_fx :echo, decay: 4, mix: 0, phase: 0.5, mix_slide: 32, mix_slide_shape: 7 do |echo_guitar|
          with_fx :reverb, mix: 0.6, room: 0.1, room_slide: 32, mix_slide_shape: 7 do |reverb_guitar |
            Guitar = sample Giro_accordi, start:   0.04708829406,
              finish: 0.94776098398, amp: 0, amp_slide: 32, cutoff: 105
            control Guitar, amp: 2
            control reverb_guitar, room: 0.99
            control echo_guitar, mix: 0.15
            sleep(sample_duration Giro_accordi, start:   0.04708829406, finish: 0.94776098398)
          end
        end
      end
      
    else
      stop
    end
  end
end

#Wind
#####

live_loop :Wind do
  
  if get(:command_wind) > 0
    sleep 1
  else
    if get(:command_wind_not_delayed) > 0
      sleep 0.22
      with_fx :level, amp: 0 do |volume|
        control volume, amp: 2, amp_slide: 32, amp_slide_shape: 7
        4.times do
          with_fx :reverb, mix: 0.6, room: 0.8 do
            use_synth :dark_ambience
            flute_uno = play :E5, amp: 0.5,
              attack: 0.5, sustain: 3, cutoff: rrand(70, 90)
            sleep 4
            use_synth :dark_ambience
            flute_due = play :Fs5, amp: 0.5,
              attack: 0.5, sustain: 3, cutoff: rrand(70, 90)
            sleep 4
          end
        end
      end
    else
      if get(:command_wind_stop) > 0
        with_fx :level, amp: 1.3 do
          with_fx :reverb, mix: 0.7, room: 0.9 do
            use_synth :dark_ambience
            flute_uno = play :E5, amp: 0.4,
              attack: 0.5, sustain: 3, cutoff: rrand(70, 85), cutoff_slide: rrand(2, 4)
            control flute_uno, cutoff: rrand(75, 90)
            sleep 4
            use_synth :dark_ambience
            flute_due = play :Fs5, amp: 0.4,
              attack: 0.5, sustain: 3, cutoff: rrand(70, 85), cutoff_slide: rrand(2, 4)
            control flute_due, cutoff: rrand(75, 90)
            sleep 4
          end
        end
        
      else
        stop
      end
    end
    
  end
end

#Piano
######

define :piano_player do
  with_fx :echo, amp: 0.6, mix: rrand(0.2, 0.4), phase: 1, decay: 8 do
    3.times do
      1.times do
        use_synth :piano
        play (chord :C3, :major7), sustain: 4, release: 2
        sleep 4
      end
      1.times do
        use_synth :piano
        play (chord :D3, '6*9'), sustain: 4, release: 2
        sleep 4
      end
    end
    1.times do
      use_synth :piano
      play (chord :C3, :major7), sustain: 4, release: 2
      sleep 2
    end
    1.times do
      use_synth :piano
      play (chord :E3, '5'), sustain: 4, release: 2
      sleep 2
    end
    1.times do
      use_synth :piano
      play (chord :D3, '6*9'), sustain: 4, release: 2
      sleep 4
    end
  end
end

live_loop :Descrizione_C do
  
  if get(:command_piano) > 0
    sleep 1
  else
    if get(:command_piano_not_delayed) > 0
      sleep 32.225
      piano_player
    else
      if get(:command_piano_stop) > 0
        piano_player
        
      else
        stop
      end
    end
    
  end
end

#Armoniche
##########

slide_time = (sample_duration Armoniche, start: 0.188, finish: 0.6095)

live_loop :Armonics do
  
  if get(:command_armonic) > 0
    sleep 1
  else
    if get(:command_armonic_not_delayed) > 0
      sleep 66.445 + (4*slide_time)
    else
      if get(:command_armonic_stop) > 0
        with_fx :reverb, mix: 0.1, mix_slide_shape: 7,
        mix_slide: slide_time/6 do |reverb_armoniche|
          with_fx :echo, mix: 0, phase: 1,
          decay: 4, mix_slide: slide_time, decay_slide: slide_time do |echo_armoniche|
            1.times do
              control reverb_armoniche, mix: 0.8
              control echo_armoniche, mix: 0.3, decay: slide_time
              sample Armoniche, attack: 0.1, start: 0.188, finish: 0.6095, amp: 3.5, hpf: 70
              sleep (sample_duration Armoniche, start: 0.188, finish: 0.6095)
            end
            sleep (sample_duration Armoniche, start: 0.188, finish: 0.6095)
          end
        end
        
      else
        stop
        
      end
    end
  end
  
end

#Ships' bells
#############

with_fx :level, amp: 0.08 do
  with_fx :echo, phase: 2, amp: 0.2 do
    
    live_loop :ships_bell do
      
      if get(:command_ship_bells) > 0
        sleep 1
      else
        if get(:command_ship_not_delayed) > 0
          sleep 64
        else
          if get(:command_ship_stop) > 0
            sample :perc_bell, rate: rrand(-1.5, 0.5), pan: rrand(-0.8, 0.8)
            sleep rrand(4, 2)
          else
            stop
          end
        end
      end
      
    end
  end
end

#Gabbiani
#########

live_loop :gabbiani do
  
  if get(:command_gabbiani) == 0
    stop
  else
    duration = sample_duration Gabbiani
    with_fx :reverb, mix: rrand(0.1, 0.2), mix_slide: 6, room: rrand(0.1, 0.2), room_slide: rrand(4, 6)  do |s|
      with_fx :lpf, cutoff: rrand(40, 80), cutoff_slide: rrand(4, 6) do |n|
        Gabbiani_uno = sample Gabbiani, attack: 1, sustain: 33, release: 1, amp: 0.7
        Gabbiani_due = sample Gabbiani, attack: 1, sustain: 33, release: 1, amp: 0.3, rate: -0.9
        control s, mix: 0.9, room: rrand(0.75, 0.85)
        control n, cutoff: 120
        sleep rrand(25, duration)
      end
    end
  end
  
end

#Oceano
#######

live_loop :oceans do
  
  if get(:command_oceano) == 0
    stop
  else
    with_fx :reverb, amp: 0.05, mix: 0.5 do
      s = synth [:bnoise, :cnoise, :gnoise].choose, amp: rrand(0.5, 1.5),
        attack: rrand(0, 4), sustain: rrand(0, 2), release: rrand(1, 5),
        cutoff_slide: rrand(0, 5), cutoff: rrand(60, 100),
        pan: rrand(-1, 1), pan_slide: rrand(1, 5), amp: rrand(0.5, 1)
      control s, pan: rrand(-1, 1), cutoff: rrand(60, 110)
      sleep rrand(2, 4)
    end
  end
  
end

#Narratore
##########

with_fx :reverb, room: 0.6 do
  live_loop :registrazione do
    
    if get(:command_record) > 0
      sleep 1
      
    else
      
      sample Registrazione_uno, rate: 0.98, amp: 4.5, cutoff: 108
      sleep (sample_duration Registrazione_uno, rate: 0.98)
      
      set :command_gabbiani, 0 #alternative is 0
      set :command_oceano, 0 #alternative is 0
      stop
    end
  end
end
